Referencia:
	### (modulos que no existen en esta version. Existian antes).


Modulos terminados de chequear:
	* CUser terminado
	* UDataBase terminado, casi completo.
	* USParser listo :).
	* DispObject listo
	* MarquesinObj listo.
	* TextWindow pareceria estar listo.
	* DispObjFilter
	* SServer se podria decir (testeado para un solo cliente, deberia andar
	para mas clientes...).
	* SClient (80 % testeado.. faltaria intentar volver a enviar 2 veces
	seguidas y recibir 2 veces seguidas..).
	* udbprotocol (testeado)
	
Modulos en chequeo:
	* maintxtwindow (reajustar el nombre del diagrama)
	* dispobjtable NO esta testeado, pero si compilando.
	* UServer (2 version, implementado con SServer).
	

Tareas:	
	* Cambiar el diagrama modificando UDBServer UServer ya que van a
	usar SServer SClient (los agregamos como atributos para	evitar 2121312
	flechas).
	* Haciendo UDBServer (verificando la forma de hacerlo: si conviene
	generalizar el servidor y los protocolos parser, o si conviene hacer
	las cosas de otra forma). El problema esta en como obtener los datos
	del servidor, ya sea pasandole una function *, o si el thread
	crearlo en el modulo "padre" del server (de esta 2º forma lo que se 
	puede hacer es escuchar, leer (se bloquea) y asi vuelve al padre
	con los datos una vez leidos).
	* HACIENDO el dispmanager y ver el tema de las interfaces graficas, 
	modularizar un cacho mas y tratar de trabajar independientemente
	la marquesina de las demas cosas etc.
	* Chequear el diagrama si falta algo.
	* SClient el tema de las llamadas bloqueantes y no bloqueantes.
	* Testear el verdadero udbserver/UDataBase->server.
	
UServer:
	* Hacerlo que soporte multiples clientes?.
	* Modularizar UServer y agregarle otra clase UClient que maneje las
	interacciones con el cliente (soporte de multiples clientes).
	
	
* Generar un config_file (parser) para leer las configuraciones de varias cosas:
	* Posicion de la ventana de la marquesina.
	* Tamaño de la fuente.
	* Tamaño de la ventana.
	* Archivo de base de datos.
	* Puerto de escucha del UServer.
	
	
	
	
FINAL:
	* Sacar el flab -g.
	* Sacar el define __DEBUG.
	* Correr el sistema y verificar la memoria que no se vaya con dios




TIPS:
	* Crear el servidor con las interfaces QT => se hace exportable a
	windows el programa directamente :D.